<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.fangdd</groupId>
    <artifactId>tp-demo-server</artifactId>
    <version>1.0-SNAPSHOT</version>
    <name>TP-DOC</name>
    <description>自动化文档</description>
    <packaging>jar</packaging>

    <properties>
        <doclet.version>1.2-SNAPSHOT</doclet.version>
    </properties>
    <!-- 因为一个pom不允许有多个parent，所以采用此种方式引入spring-boot依赖 -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <!-- Import dependency management from Spring Boot -->
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>1.5.6.RELEASE</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>com.fangdd</groupId>
            <artifactId>doclet-pojo</artifactId>
            <version>${doclet.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fangdd</groupId>
            <artifactId>doclet-render</artifactId>
            <version>${doclet.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fangdd.traffic</groupId>
            <artifactId>common-mongodb</artifactId>
            <version>2.3-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>com.fangdd</groupId>
            <artifactId>tp-demo-api</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>com.fangdd.tp</groupId>
            <artifactId>spring-boot-starter-dubbo</artifactId>
            <version>1.0.0</version>
            <exclusions>
                <exclusion>
                    <artifactId>log4j</artifactId>
                    <groupId>log4j</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>guava</artifactId>
                    <groupId>com.google.guava</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-freemarker</artifactId>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.11</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>19.0</version>
        </dependency>
    </dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>1.5.6.RELEASE</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>assembly-deploy-package</id>
                        <phase>package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <tasks>
                                <copy todir="${project.build.directory}/distributions/service/lib" overwrite="true">
                                    <fileset dir="${project.build.directory}">
                                        <include name="${project.artifactId}.jar"/>
                                    </fileset>
                                </copy>

                                <!-- 生成zip压缩包 -->
                                <zip destfile="${project.build.directory}/distributions/${project.artifactId}.zip">
                                    <zipfileset dir="${project.build.directory}/distributions/service"/>
                                </zip>
                            </tasks>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!--<plugin>-->
            <!--<groupId>org.apache.maven.plugins</groupId>-->
            <!--<artifactId>maven-javadoc-plugin</artifactId>-->
            <!--<version>2.10.3</version>-->
            <!--<configuration>-->
            <!--<doclet>com.fangdd.tp.doclet.TpDoclet</doclet>-->
            <!--<docletArtifact>-->
            <!--<groupId>com.fangdd</groupId>-->
            <!--<artifactId>doclet</artifactId>-->
            <!--<version>1.0-SNAPSHOT</version>-->
            <!--</docletArtifact>-->
            <!--&lt;!&ndash;<sourceFileIncludes>&ndash;&gt;-->
            <!--&lt;!&ndash;&lt;!&ndash; 接口的路径，可以添加多个 &ndash;&gt;&ndash;&gt;-->
            <!--&lt;!&ndash;<include>com/fangdd/tp/service/impl/*.java</include>&ndash;&gt;-->
            <!--&lt;!&ndash;</sourceFileIncludes>&ndash;&gt;-->
            <!--<sourcepath>-->
            <!--&lt;!&ndash; 指定需要扫描的包路径 &ndash;&gt;-->
            <!--com.fangdd.tp.*-->
            <!--</sourcepath>-->
            <!--<sourcepath>-->
            <!--&lt;!&ndash; 指定源码路径，如果多个模块，需要包含进去。分隔符：linux使用:   windows使用; &ndash;&gt;-->
            <!--${project.basedir}/src/main/java:${project.basedir}/../tp-demo-api/src/main/java-->
            <!--</sourcepath>-->
            <!--<useStandardDocletOptions>false</useStandardDocletOptions>-->

            <!--<additionalJOptions>-->
            <!--&lt;!&ndash; 导出方式，可选方法有： &ndash;&gt;-->
            <!--&lt;!&ndash;    web: 导出到tp-doc.fangdd.net上 &ndash;&gt;-->
            <!--&lt;!&ndash;    console: 导出markdown到控制台 &ndash;&gt;-->
            <!--<additionalJOption>-J-DexportType=web</additionalJOption>-->
            <!--<additionalJOption>-J-Dbasedir=${project.basedir}</additionalJOption>-->
            <!--<additionalJOption>-J-Dserver=http://127.0.0.1:17010</additionalJOption>-->
            <!--</additionalJOptions>-->
            <!--</configuration>-->
            <!--<executions>-->
            <!--<execution>-->
            <!--<id>attach-javadocs</id>-->
            <!--<phase>compile</phase>-->
            <!--<goals>-->
            <!--<goal>javadoc</goal>-->
            <!--</goals>-->
            <!--</execution>-->
            <!--</executions>-->
            <!--</plugin>-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>